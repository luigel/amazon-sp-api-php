<?php
/**
 * PurchaseShipmentRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Amazon Shipping API
 *
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * OpenAPI spec version: v2
 * Contact: swa-api-core@amazon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.61
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Luigel\AmazonSellingPartnerAPI\Models\Shipping;

use \ArrayAccess;
use Luigel\AmazonSellingPartnerAPI\ObjectSerializer;

/**
 * PurchaseShipmentRequest Class Doc Comment
 *
 * @category Class
 * @description The request schema for the purchaseShipment operation.
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PurchaseShipmentRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'PurchaseShipmentRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'request_token' => '\Luigel\AmazonSellingPartnerAPI\Models\Shipping\RequestToken',
        'rate_id' => '\Luigel\AmazonSellingPartnerAPI\Models\Shipping\RateId',
        'requested_document_specification' => '\Luigel\AmazonSellingPartnerAPI\Models\Shipping\RequestedDocumentSpecification',
        'requested_value_added_services' => '\Luigel\AmazonSellingPartnerAPI\Models\Shipping\RequestedValueAddedServiceList',
        'additional_inputs' => 'map[string,object]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'request_token' => null,
        'rate_id' => null,
        'requested_document_specification' => null,
        'requested_value_added_services' => null,
        'additional_inputs' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'request_token' => 'requestToken',
        'rate_id' => 'rateId',
        'requested_document_specification' => 'requestedDocumentSpecification',
        'requested_value_added_services' => 'requestedValueAddedServices',
        'additional_inputs' => 'additionalInputs'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'request_token' => 'setRequestToken',
        'rate_id' => 'setRateId',
        'requested_document_specification' => 'setRequestedDocumentSpecification',
        'requested_value_added_services' => 'setRequestedValueAddedServices',
        'additional_inputs' => 'setAdditionalInputs'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'request_token' => 'getRequestToken',
        'rate_id' => 'getRateId',
        'requested_document_specification' => 'getRequestedDocumentSpecification',
        'requested_value_added_services' => 'getRequestedValueAddedServices',
        'additional_inputs' => 'getAdditionalInputs'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['request_token'] = isset($data['request_token']) ? $data['request_token'] : null;
        $this->container['rate_id'] = isset($data['rate_id']) ? $data['rate_id'] : null;
        $this->container['requested_document_specification'] = isset($data['requested_document_specification']) ? $data['requested_document_specification'] : null;
        $this->container['requested_value_added_services'] = isset($data['requested_value_added_services']) ? $data['requested_value_added_services'] : null;
        $this->container['additional_inputs'] = isset($data['additional_inputs']) ? $data['additional_inputs'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['request_token'] === null) {
            $invalidProperties[] = "'request_token' can't be null";
        }
        if ($this->container['rate_id'] === null) {
            $invalidProperties[] = "'rate_id' can't be null";
        }
        if ($this->container['requested_document_specification'] === null) {
            $invalidProperties[] = "'requested_document_specification' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets request_token
     *
     * @return \Luigel\AmazonSellingPartnerAPI\Models\Shipping\RequestToken
     */
    public function getRequestToken()
    {
        return $this->container['request_token'];
    }

    /**
     * Sets request_token
     *
     * @param \Luigel\AmazonSellingPartnerAPI\Models\Shipping\RequestToken $request_token request_token
     *
     * @return $this
     */
    public function setRequestToken($request_token)
    {
        $this->container['request_token'] = $request_token;

        return $this;
    }

    /**
     * Gets rate_id
     *
     * @return \Luigel\AmazonSellingPartnerAPI\Models\Shipping\RateId
     */
    public function getRateId()
    {
        return $this->container['rate_id'];
    }

    /**
     * Sets rate_id
     *
     * @param \Luigel\AmazonSellingPartnerAPI\Models\Shipping\RateId $rate_id rate_id
     *
     * @return $this
     */
    public function setRateId($rate_id)
    {
        $this->container['rate_id'] = $rate_id;

        return $this;
    }

    /**
     * Gets requested_document_specification
     *
     * @return \Luigel\AmazonSellingPartnerAPI\Models\Shipping\RequestedDocumentSpecification
     */
    public function getRequestedDocumentSpecification()
    {
        return $this->container['requested_document_specification'];
    }

    /**
     * Sets requested_document_specification
     *
     * @param \Luigel\AmazonSellingPartnerAPI\Models\Shipping\RequestedDocumentSpecification $requested_document_specification requested_document_specification
     *
     * @return $this
     */
    public function setRequestedDocumentSpecification($requested_document_specification)
    {
        $this->container['requested_document_specification'] = $requested_document_specification;

        return $this;
    }

    /**
     * Gets requested_value_added_services
     *
     * @return \Luigel\AmazonSellingPartnerAPI\Models\Shipping\RequestedValueAddedServiceList
     */
    public function getRequestedValueAddedServices()
    {
        return $this->container['requested_value_added_services'];
    }

    /**
     * Sets requested_value_added_services
     *
     * @param \Luigel\AmazonSellingPartnerAPI\Models\Shipping\RequestedValueAddedServiceList $requested_value_added_services requested_value_added_services
     *
     * @return $this
     */
    public function setRequestedValueAddedServices($requested_value_added_services)
    {
        $this->container['requested_value_added_services'] = $requested_value_added_services;

        return $this;
    }

    /**
     * Gets additional_inputs
     *
     * @return map[string,object]
     */
    public function getAdditionalInputs()
    {
        return $this->container['additional_inputs'];
    }

    /**
     * Sets additional_inputs
     *
     * @param map[string,object] $additional_inputs The additional inputs required to purchase a shipping offering, in JSON format. The JSON provided here must adhere to the JSON schema that is returned in the response to the getAdditionalInputs operation.  Additional inputs are only required when indicated by the requiresAdditionalInputs property in the response to the getRates operation.
     *
     * @return $this
     */
    public function setAdditionalInputs($additional_inputs)
    {
        $this->container['additional_inputs'] = $additional_inputs;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
