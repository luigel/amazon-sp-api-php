<?php
/**
 * LinkCarrierAccountRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Amazon Shipping API
 *
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * OpenAPI spec version: v2
 * Contact: swa-api-core@amazon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.61
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Luigel\AmazonSellingPartnerAPI\Models\Shipping;

use \ArrayAccess;
use Luigel\AmazonSellingPartnerAPI\ObjectSerializer;

/**
 * LinkCarrierAccountRequest Class Doc Comment
 *
 * @category Class
 * @description The request schema for verify and add the merchant&#x27;s account with a certain carrier.
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class LinkCarrierAccountRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'LinkCarrierAccountRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'client_reference_details' => '\Luigel\AmazonSellingPartnerAPI\Models\Shipping\ClientReferenceDetails',
        'carrier_account_type' => '\Luigel\AmazonSellingPartnerAPI\Models\Shipping\CarrierAccountType',
        'carrier_account_attributes' => '\Luigel\AmazonSellingPartnerAPI\Models\Shipping\CarrierAccountAttributes',
        'encrypted_carrier_account_attributes' => '\Luigel\AmazonSellingPartnerAPI\Models\Shipping\CarrierAccountAttributes'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'client_reference_details' => null,
        'carrier_account_type' => null,
        'carrier_account_attributes' => null,
        'encrypted_carrier_account_attributes' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'client_reference_details' => 'clientReferenceDetails',
        'carrier_account_type' => 'carrierAccountType',
        'carrier_account_attributes' => 'carrierAccountAttributes',
        'encrypted_carrier_account_attributes' => 'encryptedCarrierAccountAttributes'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'client_reference_details' => 'setClientReferenceDetails',
        'carrier_account_type' => 'setCarrierAccountType',
        'carrier_account_attributes' => 'setCarrierAccountAttributes',
        'encrypted_carrier_account_attributes' => 'setEncryptedCarrierAccountAttributes'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'client_reference_details' => 'getClientReferenceDetails',
        'carrier_account_type' => 'getCarrierAccountType',
        'carrier_account_attributes' => 'getCarrierAccountAttributes',
        'encrypted_carrier_account_attributes' => 'getEncryptedCarrierAccountAttributes'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['client_reference_details'] = isset($data['client_reference_details']) ? $data['client_reference_details'] : null;
        $this->container['carrier_account_type'] = isset($data['carrier_account_type']) ? $data['carrier_account_type'] : null;
        $this->container['carrier_account_attributes'] = isset($data['carrier_account_attributes']) ? $data['carrier_account_attributes'] : null;
        $this->container['encrypted_carrier_account_attributes'] = isset($data['encrypted_carrier_account_attributes']) ? $data['encrypted_carrier_account_attributes'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['carrier_account_type'] === null) {
            $invalidProperties[] = "'carrier_account_type' can't be null";
        }
        if ($this->container['carrier_account_attributes'] === null) {
            $invalidProperties[] = "'carrier_account_attributes' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets client_reference_details
     *
     * @return \Luigel\AmazonSellingPartnerAPI\Models\Shipping\ClientReferenceDetails
     */
    public function getClientReferenceDetails()
    {
        return $this->container['client_reference_details'];
    }

    /**
     * Sets client_reference_details
     *
     * @param \Luigel\AmazonSellingPartnerAPI\Models\Shipping\ClientReferenceDetails $client_reference_details client_reference_details
     *
     * @return $this
     */
    public function setClientReferenceDetails($client_reference_details)
    {
        $this->container['client_reference_details'] = $client_reference_details;

        return $this;
    }

    /**
     * Gets carrier_account_type
     *
     * @return \Luigel\AmazonSellingPartnerAPI\Models\Shipping\CarrierAccountType
     */
    public function getCarrierAccountType()
    {
        return $this->container['carrier_account_type'];
    }

    /**
     * Sets carrier_account_type
     *
     * @param \Luigel\AmazonSellingPartnerAPI\Models\Shipping\CarrierAccountType $carrier_account_type carrier_account_type
     *
     * @return $this
     */
    public function setCarrierAccountType($carrier_account_type)
    {
        $this->container['carrier_account_type'] = $carrier_account_type;

        return $this;
    }

    /**
     * Gets carrier_account_attributes
     *
     * @return \Luigel\AmazonSellingPartnerAPI\Models\Shipping\CarrierAccountAttributes
     */
    public function getCarrierAccountAttributes()
    {
        return $this->container['carrier_account_attributes'];
    }

    /**
     * Sets carrier_account_attributes
     *
     * @param \Luigel\AmazonSellingPartnerAPI\Models\Shipping\CarrierAccountAttributes $carrier_account_attributes carrier_account_attributes
     *
     * @return $this
     */
    public function setCarrierAccountAttributes($carrier_account_attributes)
    {
        $this->container['carrier_account_attributes'] = $carrier_account_attributes;

        return $this;
    }

    /**
     * Gets encrypted_carrier_account_attributes
     *
     * @return \Luigel\AmazonSellingPartnerAPI\Models\Shipping\CarrierAccountAttributes
     */
    public function getEncryptedCarrierAccountAttributes()
    {
        return $this->container['encrypted_carrier_account_attributes'];
    }

    /**
     * Sets encrypted_carrier_account_attributes
     *
     * @param \Luigel\AmazonSellingPartnerAPI\Models\Shipping\CarrierAccountAttributes $encrypted_carrier_account_attributes encrypted_carrier_account_attributes
     *
     * @return $this
     */
    public function setEncryptedCarrierAccountAttributes($encrypted_carrier_account_attributes)
    {
        $this->container['encrypted_carrier_account_attributes'] = $encrypted_carrier_account_attributes;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
