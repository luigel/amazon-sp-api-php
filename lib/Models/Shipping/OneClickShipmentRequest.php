<?php
/**
 * OneClickShipmentRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Amazon Shipping API
 *
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * OpenAPI spec version: v2
 * Contact: swa-api-core@amazon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.61
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Luigel\AmazonSellingPartnerAPI\Models\Shipping;

use \ArrayAccess;
use Luigel\AmazonSellingPartnerAPI\ObjectSerializer;

/**
 * OneClickShipmentRequest Class Doc Comment
 *
 * @category Class
 * @description The request schema for the OneClickShipment operation. When the channelType is not Amazon, shipTo is required and when channelType is Amazon shipTo is ignored.
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class OneClickShipmentRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'OneClickShipmentRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'ship_to' => '\Luigel\AmazonSellingPartnerAPI\Models\Shipping\Address',
        'ship_from' => '\Luigel\AmazonSellingPartnerAPI\Models\Shipping\Address',
        'return_to' => '\Luigel\AmazonSellingPartnerAPI\Models\Shipping\Address',
        'ship_date' => '\DateTime',
        'packages' => '\Luigel\AmazonSellingPartnerAPI\Models\Shipping\PackageList',
        'value_added_services_details' => '\Luigel\AmazonSellingPartnerAPI\Models\Shipping\OneClickShipmentValueAddedServiceDetails',
        'tax_details' => '\Luigel\AmazonSellingPartnerAPI\Models\Shipping\TaxDetailList',
        'channel_details' => '\Luigel\AmazonSellingPartnerAPI\Models\Shipping\ChannelDetails',
        'label_specifications' => '\Luigel\AmazonSellingPartnerAPI\Models\Shipping\RequestedDocumentSpecification',
        'service_selection' => '\Luigel\AmazonSellingPartnerAPI\Models\Shipping\ServiceSelection',
        'shipper_instruction' => '\Luigel\AmazonSellingPartnerAPI\Models\Shipping\ShipperInstruction',
        'destination_access_point_details' => '\Luigel\AmazonSellingPartnerAPI\Models\Shipping\AccessPointDetails'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'ship_to' => null,
        'ship_from' => null,
        'return_to' => null,
        'ship_date' => 'date-time',
        'packages' => null,
        'value_added_services_details' => null,
        'tax_details' => null,
        'channel_details' => null,
        'label_specifications' => null,
        'service_selection' => null,
        'shipper_instruction' => null,
        'destination_access_point_details' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'ship_to' => 'shipTo',
        'ship_from' => 'shipFrom',
        'return_to' => 'returnTo',
        'ship_date' => 'shipDate',
        'packages' => 'packages',
        'value_added_services_details' => 'valueAddedServicesDetails',
        'tax_details' => 'taxDetails',
        'channel_details' => 'channelDetails',
        'label_specifications' => 'labelSpecifications',
        'service_selection' => 'serviceSelection',
        'shipper_instruction' => 'shipperInstruction',
        'destination_access_point_details' => 'destinationAccessPointDetails'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'ship_to' => 'setShipTo',
        'ship_from' => 'setShipFrom',
        'return_to' => 'setReturnTo',
        'ship_date' => 'setShipDate',
        'packages' => 'setPackages',
        'value_added_services_details' => 'setValueAddedServicesDetails',
        'tax_details' => 'setTaxDetails',
        'channel_details' => 'setChannelDetails',
        'label_specifications' => 'setLabelSpecifications',
        'service_selection' => 'setServiceSelection',
        'shipper_instruction' => 'setShipperInstruction',
        'destination_access_point_details' => 'setDestinationAccessPointDetails'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'ship_to' => 'getShipTo',
        'ship_from' => 'getShipFrom',
        'return_to' => 'getReturnTo',
        'ship_date' => 'getShipDate',
        'packages' => 'getPackages',
        'value_added_services_details' => 'getValueAddedServicesDetails',
        'tax_details' => 'getTaxDetails',
        'channel_details' => 'getChannelDetails',
        'label_specifications' => 'getLabelSpecifications',
        'service_selection' => 'getServiceSelection',
        'shipper_instruction' => 'getShipperInstruction',
        'destination_access_point_details' => 'getDestinationAccessPointDetails'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['ship_to'] = isset($data['ship_to']) ? $data['ship_to'] : null;
        $this->container['ship_from'] = isset($data['ship_from']) ? $data['ship_from'] : null;
        $this->container['return_to'] = isset($data['return_to']) ? $data['return_to'] : null;
        $this->container['ship_date'] = isset($data['ship_date']) ? $data['ship_date'] : null;
        $this->container['packages'] = isset($data['packages']) ? $data['packages'] : null;
        $this->container['value_added_services_details'] = isset($data['value_added_services_details']) ? $data['value_added_services_details'] : null;
        $this->container['tax_details'] = isset($data['tax_details']) ? $data['tax_details'] : null;
        $this->container['channel_details'] = isset($data['channel_details']) ? $data['channel_details'] : null;
        $this->container['label_specifications'] = isset($data['label_specifications']) ? $data['label_specifications'] : null;
        $this->container['service_selection'] = isset($data['service_selection']) ? $data['service_selection'] : null;
        $this->container['shipper_instruction'] = isset($data['shipper_instruction']) ? $data['shipper_instruction'] : null;
        $this->container['destination_access_point_details'] = isset($data['destination_access_point_details']) ? $data['destination_access_point_details'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['ship_from'] === null) {
            $invalidProperties[] = "'ship_from' can't be null";
        }
        if ($this->container['packages'] === null) {
            $invalidProperties[] = "'packages' can't be null";
        }
        if ($this->container['channel_details'] === null) {
            $invalidProperties[] = "'channel_details' can't be null";
        }
        if ($this->container['label_specifications'] === null) {
            $invalidProperties[] = "'label_specifications' can't be null";
        }
        if ($this->container['service_selection'] === null) {
            $invalidProperties[] = "'service_selection' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets ship_to
     *
     * @return \Luigel\AmazonSellingPartnerAPI\Models\Shipping\Address
     */
    public function getShipTo()
    {
        return $this->container['ship_to'];
    }

    /**
     * Sets ship_to
     *
     * @param \Luigel\AmazonSellingPartnerAPI\Models\Shipping\Address $ship_to ship_to
     *
     * @return $this
     */
    public function setShipTo($ship_to)
    {
        $this->container['ship_to'] = $ship_to;

        return $this;
    }

    /**
     * Gets ship_from
     *
     * @return \Luigel\AmazonSellingPartnerAPI\Models\Shipping\Address
     */
    public function getShipFrom()
    {
        return $this->container['ship_from'];
    }

    /**
     * Sets ship_from
     *
     * @param \Luigel\AmazonSellingPartnerAPI\Models\Shipping\Address $ship_from ship_from
     *
     * @return $this
     */
    public function setShipFrom($ship_from)
    {
        $this->container['ship_from'] = $ship_from;

        return $this;
    }

    /**
     * Gets return_to
     *
     * @return \Luigel\AmazonSellingPartnerAPI\Models\Shipping\Address
     */
    public function getReturnTo()
    {
        return $this->container['return_to'];
    }

    /**
     * Sets return_to
     *
     * @param \Luigel\AmazonSellingPartnerAPI\Models\Shipping\Address $return_to return_to
     *
     * @return $this
     */
    public function setReturnTo($return_to)
    {
        $this->container['return_to'] = $return_to;

        return $this;
    }

    /**
     * Gets ship_date
     *
     * @return \DateTime
     */
    public function getShipDate()
    {
        return $this->container['ship_date'];
    }

    /**
     * Sets ship_date
     *
     * @param \DateTime $ship_date The ship date and time (the requested pickup). This defaults to the current date and time.
     *
     * @return $this
     */
    public function setShipDate($ship_date)
    {
        $this->container['ship_date'] = $ship_date;

        return $this;
    }

    /**
     * Gets packages
     *
     * @return \Luigel\AmazonSellingPartnerAPI\Models\Shipping\PackageList
     */
    public function getPackages()
    {
        return $this->container['packages'];
    }

    /**
     * Sets packages
     *
     * @param \Luigel\AmazonSellingPartnerAPI\Models\Shipping\PackageList $packages packages
     *
     * @return $this
     */
    public function setPackages($packages)
    {
        $this->container['packages'] = $packages;

        return $this;
    }

    /**
     * Gets value_added_services_details
     *
     * @return \Luigel\AmazonSellingPartnerAPI\Models\Shipping\OneClickShipmentValueAddedServiceDetails
     */
    public function getValueAddedServicesDetails()
    {
        return $this->container['value_added_services_details'];
    }

    /**
     * Sets value_added_services_details
     *
     * @param \Luigel\AmazonSellingPartnerAPI\Models\Shipping\OneClickShipmentValueAddedServiceDetails $value_added_services_details value_added_services_details
     *
     * @return $this
     */
    public function setValueAddedServicesDetails($value_added_services_details)
    {
        $this->container['value_added_services_details'] = $value_added_services_details;

        return $this;
    }

    /**
     * Gets tax_details
     *
     * @return \Luigel\AmazonSellingPartnerAPI\Models\Shipping\TaxDetailList
     */
    public function getTaxDetails()
    {
        return $this->container['tax_details'];
    }

    /**
     * Sets tax_details
     *
     * @param \Luigel\AmazonSellingPartnerAPI\Models\Shipping\TaxDetailList $tax_details tax_details
     *
     * @return $this
     */
    public function setTaxDetails($tax_details)
    {
        $this->container['tax_details'] = $tax_details;

        return $this;
    }

    /**
     * Gets channel_details
     *
     * @return \Luigel\AmazonSellingPartnerAPI\Models\Shipping\ChannelDetails
     */
    public function getChannelDetails()
    {
        return $this->container['channel_details'];
    }

    /**
     * Sets channel_details
     *
     * @param \Luigel\AmazonSellingPartnerAPI\Models\Shipping\ChannelDetails $channel_details channel_details
     *
     * @return $this
     */
    public function setChannelDetails($channel_details)
    {
        $this->container['channel_details'] = $channel_details;

        return $this;
    }

    /**
     * Gets label_specifications
     *
     * @return \Luigel\AmazonSellingPartnerAPI\Models\Shipping\RequestedDocumentSpecification
     */
    public function getLabelSpecifications()
    {
        return $this->container['label_specifications'];
    }

    /**
     * Sets label_specifications
     *
     * @param \Luigel\AmazonSellingPartnerAPI\Models\Shipping\RequestedDocumentSpecification $label_specifications label_specifications
     *
     * @return $this
     */
    public function setLabelSpecifications($label_specifications)
    {
        $this->container['label_specifications'] = $label_specifications;

        return $this;
    }

    /**
     * Gets service_selection
     *
     * @return \Luigel\AmazonSellingPartnerAPI\Models\Shipping\ServiceSelection
     */
    public function getServiceSelection()
    {
        return $this->container['service_selection'];
    }

    /**
     * Sets service_selection
     *
     * @param \Luigel\AmazonSellingPartnerAPI\Models\Shipping\ServiceSelection $service_selection service_selection
     *
     * @return $this
     */
    public function setServiceSelection($service_selection)
    {
        $this->container['service_selection'] = $service_selection;

        return $this;
    }

    /**
     * Gets shipper_instruction
     *
     * @return \Luigel\AmazonSellingPartnerAPI\Models\Shipping\ShipperInstruction
     */
    public function getShipperInstruction()
    {
        return $this->container['shipper_instruction'];
    }

    /**
     * Sets shipper_instruction
     *
     * @param \Luigel\AmazonSellingPartnerAPI\Models\Shipping\ShipperInstruction $shipper_instruction shipper_instruction
     *
     * @return $this
     */
    public function setShipperInstruction($shipper_instruction)
    {
        $this->container['shipper_instruction'] = $shipper_instruction;

        return $this;
    }

    /**
     * Gets destination_access_point_details
     *
     * @return \Luigel\AmazonSellingPartnerAPI\Models\Shipping\AccessPointDetails
     */
    public function getDestinationAccessPointDetails()
    {
        return $this->container['destination_access_point_details'];
    }

    /**
     * Sets destination_access_point_details
     *
     * @param \Luigel\AmazonSellingPartnerAPI\Models\Shipping\AccessPointDetails $destination_access_point_details destination_access_point_details
     *
     * @return $this
     */
    public function setDestinationAccessPointDetails($destination_access_point_details)
    {
        $this->container['destination_access_point_details'] = $destination_access_point_details;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
